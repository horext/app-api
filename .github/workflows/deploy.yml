name: Deploy Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image-tag:
        required: true
        type: string
        description: "Docker image tag to deploy"
    secrets:
      SERVER_USER:
        required: true
      SERVER_IP:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      ENV_FILE:
        required: true
      DOCKER_PROJECT_NAME:
        required: true
      ENV_FILE_PATH:
        required: true
      SPRING_DATASOURCE_USERNAME:
        required: true
      SPRING_DATASOURCE_PASSWORD:
        required: true
      SPRING_DATASOURCE_URL:
        required: true
      SPRING_DATASOURCE_SCHEMA:
        required: true

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      PROJECT_FOLDER: ${{ github.repository}}/${{ github.ref_name }}
      DOCKER_COMPOSE_TEMPLATE_PATH: deploy/docker-compose.yml
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create project folder
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: mkdir -p ${{ env.PROJECT_FOLDER }}

      - name: Upload Docker Compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.DOCKER_COMPOSE_TEMPLATE_PATH }}
          target: ${{ env.PROJECT_FOLDER }}

      - name: Pull and start docker
        uses: appleboy/ssh-action@v1.2.2
        env:
          DOCKER_COMPOSE_TEMPLATE: ${{ env.PROJECT_FOLDER }}/${{ env.DOCKER_COMPOSE_TEMPLATE_PATH }}
          ENV_PATH: ${{ env.PROJECT_FOLDER }}/${{ secrets.ENV_FILE_PATH }}
        timeout-minutes: 5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cat ${{ env.DOCKER_COMPOSE_TEMPLATE }}
            echo "${{ secrets.ENV_FILE }}" > ${{ env.ENV_PATH }}
            echo "IMAGE_NAME=${{ inputs.image-tag }}" >> ${{ env.ENV_PATH }}
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin
            docker pull ${{ inputs.image-tag }}
            docker compose --env-file ${{ env.ENV_PATH }} -p ${{ secrets.DOCKER_PROJECT_NAME }} -f ${{ env.DOCKER_COMPOSE_TEMPLATE }} up --wait
            docker system prune --force

  migrate-db:
    name: Migrate Database
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make Gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assemble

      - name: Migrate Database
        run: ./gradlew flywayMigrate -i
        env:
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_SCHEMA: ${{ secrets.SPRING_DATASOURCE_SCHEMA }}
          SPRING_DATASOURCE_SCHEMA: ${{ secrets.SPRING_DATASOURCE_SCHEMA }}
