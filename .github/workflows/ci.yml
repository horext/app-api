name: CI Pipeline

on:
  workflow_call:   

permissions:
  contents: read

env:
  SPRING_DATASOURCE_DATABASE: mydb
  SPRING_DATASOURCE_HOST: localhost
  SPRING_DATASOURCE_PORT: 5432
  SPRING_DATASOURCE_USERNAME: postgres
  SPRING_DATASOURCE_PASSWORD: password
  
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    env:
      THREAD_API_URL: test
      SPRING_ALLOWED_ORIGINS: http://localhost:3000
      SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/mydb" 
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_HOST: ${{ env.SPRING_DATASOURCE_HOST }}
          POSTGRES_DB: ${{ env.SPRING_DATASOURCE_DATABASE }}
          POSTGRES_USER: ${{ env.SPRING_DATASOURCE_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
          POSTGRES_PORT: ${{ env.SPRING_DATASOURCE_PORT }}
        ports:
          - "5432:5432"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        
      - name: Make Gradlew executable
        run: chmod +x gradlew

      - name: Show Gradle deps
        run: ./gradlew dependencies

      - name: Build with Gradle
        run: ./gradlew assemble --stacktrace

      - name: Migrate the database
        run: ./gradlew flywayMigrate -i
        env:
          FLYWAY_USER: ${{ env.SPRING_DATASOURCE_USERNAME }}
          FLYWAY_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
          FLYWAY_URL: jdbc:postgresql://${{ env.SPRING_DATASOURCE_HOST }}:${{ env.SPRING_DATASOURCE_PORT }}/${{ env.SPRING_DATASOURCE_DATABASE }}?schema=public
          FLYWAY_SCHEMAS: public
          FLYWAY_DRIVER: org.postgresql.Driver

      - name: Test with Gradle
        run: ./gradlew test

      - name: Prepare the application
        run: ./gradlew build

      - name: Run ktlint
        run: ./gradlew ktlintCheck
