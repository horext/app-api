name: Deploy Pipeline

on:
  push:
    branches:
      - main
      - develop
      - next

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        run: echo "${{ secrets.CI_REGISTRY_PASSWORD }}" | docker login ${{ secrets.CI_REGISTRY }} -u ${{ secrets.CI_REGISTRY_USER }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker pull ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref }} || true
          docker build -f Dockerfile.native --cache-from ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref }} -t ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.sha }} -t ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref }} .
          docker push ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.sha }}
          docker push ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install SSH Client
        run: |
          sudo apt-get update -y
          sudo apt-get install openssh-client -y

      - name: Setup SSH Agent
        run: eval "$(ssh-agent -s)"

      - name: Add SSH Private Key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo '${{ secrets.CI_REGISTRY_PASSWORD }}' | docker login ${{ secrets.CI_REGISTRY }} -u ${{ secrets.CI_REGISTRY_USER }} --password-stdin"
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker pull ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref }}"
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ${{ secrets.CI_PROJECT_PATH }}/deploy"
          scp $GITHUB_WORKSPACE/${{ secrets.DOCKER_COMPOSE_FILE_PATH }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.CI_PROJECT_PATH }}/${{ secrets.DOCKER_COMPOSE_FILE_PATH }}
          scp $GITHUB_WORKSPACE/${{ secrets.ENV_FILE }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.CI_PROJECT_PATH }}/${{ secrets.ENV_FILE_PATH }}
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker compose --env-file ${{ secrets.CI_PROJECT_PATH }}/${{ secrets.ENV_FILE_PATH }} -p ${{ secrets.DOCKER_PROJECT_NAME }} -f ${{ secrets.CI_PROJECT_PATH }}/${{ secrets.DOCKER_COMPOSE_FILE_PATH }} up -d"
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker image prune --force"

    env:
      CI_COMMIT_REF_NAME: ${{ github.ref }}
